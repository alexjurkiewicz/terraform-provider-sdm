// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tags.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Tags defines a custom message that will translate from a slice of
// Pairs into a map[] in each supported language.  See options.proto for
// documentation on the custom message options.
type Tags struct {
	Pairs                []*Tags_Pair `protobuf:"bytes,1,rep,name=pairs,proto3" json:"pairs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Tags) Reset()         { *m = Tags{} }
func (m *Tags) String() string { return proto.CompactTextString(m) }
func (*Tags) ProtoMessage()    {}
func (*Tags) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7d9cbcae1e528f6, []int{0}
}

func (m *Tags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tags.Unmarshal(m, b)
}
func (m *Tags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tags.Marshal(b, m, deterministic)
}
func (m *Tags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tags.Merge(m, src)
}
func (m *Tags) XXX_Size() int {
	return xxx_messageInfo_Tags.Size(m)
}
func (m *Tags) XXX_DiscardUnknown() {
	xxx_messageInfo_Tags.DiscardUnknown(m)
}

var xxx_messageInfo_Tags proto.InternalMessageInfo

func (m *Tags) GetPairs() []*Tags_Pair {
	if m != nil {
		return m.Pairs
	}
	return nil
}

type Tags_Pair struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tags_Pair) Reset()         { *m = Tags_Pair{} }
func (m *Tags_Pair) String() string { return proto.CompactTextString(m) }
func (*Tags_Pair) ProtoMessage()    {}
func (*Tags_Pair) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7d9cbcae1e528f6, []int{0, 0}
}

func (m *Tags_Pair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tags_Pair.Unmarshal(m, b)
}
func (m *Tags_Pair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tags_Pair.Marshal(b, m, deterministic)
}
func (m *Tags_Pair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tags_Pair.Merge(m, src)
}
func (m *Tags_Pair) XXX_Size() int {
	return xxx_messageInfo_Tags_Pair.Size(m)
}
func (m *Tags_Pair) XXX_DiscardUnknown() {
	xxx_messageInfo_Tags_Pair.DiscardUnknown(m)
}

var xxx_messageInfo_Tags_Pair proto.InternalMessageInfo

func (m *Tags_Pair) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tags_Pair) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*Tags)(nil), "v1.Tags")
	proto.RegisterType((*Tags_Pair)(nil), "v1.Tags.Pair")
}

func init() { proto.RegisterFile("tags.proto", fileDescriptor_e7d9cbcae1e528f6) }

var fileDescriptor_e7d9cbcae1e528f6 = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x50, 0x4f, 0x4b, 0xf3, 0x30,
	0x1c, 0x26, 0x7b, 0xbb, 0x37, 0x18, 0xdd, 0xa5, 0x78, 0x18, 0x43, 0xa1, 0xc4, 0xcb, 0x0e, 0x23,
	0x38, 0xbd, 0x4d, 0xf1, 0xb0, 0xfb, 0xa0, 0xcc, 0x7d, 0x81, 0x5f, 0xd7, 0x50, 0x32, 0xda, 0x26,
	0x24, 0x69, 0x61, 0xc8, 0x40, 0x3c, 0x78, 0x10, 0xbf, 0x4d, 0xbe, 0x85, 0x1f, 0x45, 0x3c, 0xd9,
	0x1d, 0x64, 0x27, 0x49, 0x3b, 0x3c, 0xe5, 0xf9, 0x13, 0x1e, 0x9e, 0xe7, 0x47, 0x88, 0x85, 0xcc,
	0x30, 0xa5, 0xa5, 0x95, 0x61, 0xaf, 0x9e, 0x8e, 0x06, 0x52, 0x59, 0x21, 0xcb, 0xa3, 0x44, 0xbf,
	0x10, 0x09, 0x56, 0x90, 0x99, 0xf0, 0x8a, 0xf4, 0x15, 0x08, 0x6d, 0x86, 0x28, 0xfa, 0x37, 0x3e,
	0xbd, 0x19, 0xb0, 0x7a, 0xca, 0xbc, 0xc1, 0x62, 0x10, 0x7a, 0xd9, 0x79, 0xa3, 0x6b, 0x12, 0x78,
	0x1a, 0x86, 0x24, 0x28, 0xa1, 0xe0, 0x43, 0x14, 0xa1, 0xf1, 0xc9, 0xb2, 0xc5, 0xe1, 0x39, 0xe9,
	0xd7, 0x90, 0x57, 0x7c, 0xd8, 0x6b, 0xc5, 0x8e, 0xcc, 0xde, 0xd1, 0xe1, 0xc7, 0xe1, 0x57, 0xf4,
	0xd1, 0x38, 0xfc, 0x8c, 0x3e, 0x1b, 0x87, 0x03, 0x5f, 0xe8, 0xdb, 0x03, 0x1f, 0x7f, 0x68, 0x1c,
	0xbe, 0xdc, 0x40, 0x0d, 0xac, 0xb2, 0x22, 0x67, 0x0b, 0x50, 0xf7, 0x8f, 0x56, 0x8b, 0x32, 0x9b,
	0x44, 0xdd, 0xfb, 0xf0, 0xb2, 0x77, 0x18, 0xaf, 0xb6, 0x8a, 0x2f, 0x40, 0xbd, 0xed, 0x1d, 0xbe,
	0x7b, 0xa2, 0x76, 0xab, 0x38, 0x9d, 0x51, 0x99, 0x6c, 0xf8, 0xda, 0xd2, 0x49, 0x44, 0x21, 0x4d,
	0x85, 0x5f, 0x05, 0x79, 0xac, 0xa5, 0xe2, 0xda, 0x0a, 0x6e, 0xe8, 0xec, 0xef, 0xa3, 0x69, 0x93,
	0xe8, 0x6e, 0x37, 0x9f, 0x90, 0x8b, 0xb5, 0x2c, 0x98, 0xb1, 0x5a, 0x96, 0x59, 0x5a, 0x30, 0x50,
	0xc2, 0x0f, 0x55, 0x79, 0x55, 0x24, 0xa2, 0xcc, 0xe6, 0x67, 0xbe, 0x53, 0x7c, 0x64, 0xc9, 0xff,
	0xf6, 0x46, 0xb7, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2a, 0x63, 0xf2, 0xaf, 0x44, 0x01, 0x00,
	0x00,
}
